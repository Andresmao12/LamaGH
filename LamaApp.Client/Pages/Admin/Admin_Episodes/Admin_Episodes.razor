@page "/admin/episodes"
@using System.Text.Json;
@using LamaApp.Client.Pages.Admin.Layout
@using LamaApp.Shared
@using LamaApp.Client.Services.Capitulos
@using LamaApp.Client.Services.Usuario;
@layout AdminLayout

@inject HttpClient httpClient
@inject ICapituloService capituloService


<div class="flex-grow-1 p-4">
    <h2 class="h2 mb-4">Gestión de Capítulos</h2>

    <!-- Search and Add Chapter -->
    <div class="d-flex justify-content-between mb-4">
        <div class="w-25">
            <input type="text" class="form-control" placeholder="Buscar capítulo...">
        </div>
        <button class="btn btn-primary">
            <i class="bi bi-plus-circle me-2"></i> Agregar Capítulo
        </button>
    </div>

    <!-- Chapters Table -->
     <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Título</th>
                <th>Fecha</th>
                <th>Ubicación</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var capitulo in capitulos)
            {
                <tr>
                    <td>@capitulo.IdCapitulo</td>
                    <td>@capitulo.Nombre</td>
                    <td>@capitulo.Pais</td>
                    <td>@capitulo.Ciudad</td>
                    <td>
                        <button class="btn btn-sm btn-outline-secondary me-2" @onclick="() => OpenEditEventModal(capitulo)">
                            <i class="fa-solid fa-pen-to-square"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteEvent(capitulo.IdCapitulo)">
                            <i class="fa-solid fa-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@* @if (showEventModal)
{
    <div class="modal fade show" style="display: block;" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@(editingEvent == null ? "Agregar Evento" : "Editar Evento")</h5>
                    <button type="button" class="btn-close" @onclick="CloseEventModal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="eventTitle" class="form-label">Título</label>
                        <input type="text" class="form-control" id="eventTitle" @bind="currentEvent.Title">
                    </div>
                    <div class="mb-3">
                        <label for="eventDate" class="form-label">Fecha</label>
                        <input type="date" class="form-control" id="eventDate" @bind="currentEvent.Date">
                    </div>
                    <div class="mb-3">
                        <label for="eventLocation" class="form-label">Ubicación</label>
                        <input type="text" class="form-control" id="eventLocation" @bind="currentEvent.Location">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseEventModal">Cancelar</button>
                    <button type="button" class="btn btn-primary" @onclick="SaveEvent">Guardar</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}
 *@


@code {

    private List<CapituloSh> capitulos = new List<CapituloSh>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            capitulos = await capituloService.GetCapitulos();
            string jsonCapitulos = JsonSerializer.Serialize(capitulos, new JsonSerializerOptions { WriteIndented = true });
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al obtener capítulos: {ex.Message}");
        }
    }



    private bool showEventModal = false;
   

    private void OpenAddEventModal()
    {
       
    }

    private void OpenEditEventModal(CapituloSh cap)
    {
       
    }

    private void CloseEventModal()
    {
    }

    private void guardarCap()
    {

    }

    private void DeleteEvent(int id)
    {
        
    }

}
